%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2020 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<br />
<&| /Widgets/TitleBox, title => loc('Merge user') &>
% if ( RT::Handle::cmp_version($RT::VERSION, '5.0.0') >= 0 ) {
  <div class="form-row">
    <div class="col-12">
      <p class="error"><% $result||'' %></p>
    </div>
  </div>

% my ($EffectiveId) = $UserObj->Attributes->Named("EffectiveId");
% my @MergedUsers = @{$UserObj->GetMergedUsers->Content};
% if ($EffectiveId) {
<div class="form-row">
  <div class="col-auto label">
    <&|/l&>This user has been merged with</&> <a href="Modify.html?id=<% $EffectiveId->Content %>">
% my $real = RT::User->new($session{'CurrentUser'});
% $real->Load($EffectiveId->Content);
<% $real->NameAndEmail %></a>
  </div>
  <div class="col-auto">
    <input class="form-control btn btn-primary" type="submit" name="Unmerge" value="<&|/l&>Unmerge</&>" />
  </div>
</div>
% } elsif (@MergedUsers) {
  <div class="form-row">
    <div class="label text-left">
      <&|/l&>The following users have been merged into this user</&>:
    </div>
  </div>
%   foreach my $user_id (@MergedUsers) {
%       my $user = RT::User->new($session{'CurrentUser'});
%       $user->LoadOriginal(Id => $user_id);
<div class="form-row">
  <div class="col-4 text-left">
    <% $user->NameAndEmail %>
  </div>
  <div class="col-4 value">
    <input class="form-control btn btn-primary" type="submit" name="Unmerge<%$user_id%>" value="<&|/l&>Unmerge</&>">
  </div>
</div>
%   }
% } else {
<div class="form-row">
  <div class="label col-auto text-left">
    <&|/l&>Merge this user into</&>:
  </div>
  <div class="value col-auto">
    <input class="form-control" name="MergeUser" data-autocomplete="Users" data-autocomplete-return="Name" value="" />
  </div>
</div>
% }
% }
% else {
<p class="error"><% $result||'' %></p>
% my ($EffectiveId) = $UserObj->Attributes->Named("EffectiveId");
% my @MergedUsers = @{$UserObj->GetMergedUsers->Content};
% if ($EffectiveId) {
<&|/l&>This user has been merged with</&> <a href="Modify.html?id=<% $EffectiveId->Content %>">
% my $real = RT::User->new($session{'CurrentUser'});
% $real->Load($EffectiveId->Content);
<% $real->NameAndEmail %></a>; <input type="submit" name="Unmerge" value="<&|/l&>Unmerge</&>" />
% } elsif (@MergedUsers) {
<&|/l&>The following users have been merged into this user</&>:<br>
%   foreach my $user_id (@MergedUsers) {
%       my $user = RT::User->new($session{'CurrentUser'});
%       $user->LoadOriginal(Id => $user_id);
<% $user->NameAndEmail %><input type="submit" name="Unmerge<%$user_id%>" value="<&|/l&>Unmerge</&>"><br>
%   }
% } else {
<&|/l&>Merge this user into</&>: <input name="MergeUser" data-autocomplete="Users" data-autocomplete-return="Name" value="" />
% }
% }
</&>
<%init>
return unless $UserObj->id;

my ($id, $result);
if ($MergeUser) {
    ($id, $result) = $UserObj->MergeInto($MergeUser);
} elsif ($Unmerge) {
    ($id, $result) = $UserObj->UnMerge();
}

foreach my $key (keys %ARGS) {
    if ($key =~ /Unmerge(\d+)/) {
        my $merged_user = RT::User->new($session{'CurrentUser'});
        $merged_user->LoadOriginal( id => $1 );
        ($id, $result) = $merged_user->UnMerge()
    }
}
</%init>
<%args>
$UserObj => undef
$MergeUser => undef
$Unmerge => undef
</%args>
